const { ethers } = require("ethers");
const dotenv = require("dotenv");

dotenv.config();

const ERC20_ABI = [
    "constructor(uint256 initialSupply)",
    "function name() view returns (string)",
    "function symbol() view returns (string)",
    "function decimals() view returns (uint8)",
    "function totalSupply() view returns (uint256)",
    "function balanceOf(address) view returns (uint256)",
    "function transfer(address to, uint256 amount) returns (bool)",
    "event Transfer(address indexed from, address indexed to, uint256 value)"
];

const BYTECODE = "0x60806040523480156200001157600080fd5b5060405162000c3838038062000c388339818101604052810190620000379190620001e2565b6040518060400160405280600a81526020016909cb4b0c8d0d2e6d2b2b760b31b815250600390805190602001906200007492919062000075565b505b828281600390805190602001906200008e92919062000075565b5080600490805190602001906200008e92919062000075565b5080600281905550806000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505061040f565b8280546200008390620002c4565b90600052602060002090601f016020900481019282620000a75760008555620000f3565b82601f10620000c257805160ff1916838001178555620000f3565b82800160010185558215620000f3579182015b82811115620000f2578251825591602001919060010190620000d5565b5b5090506200010292919062000106565b5090565b5b808211156200012157600081600090555060010162000107565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001898262000142565b810181811067ffffffffffffffff821117156200018957600080fd5b80604052505050565b60006200019c62000125565b90506200018982826200017f565b919050565b600067ffffffffffffffff821115620001bf57620001be62000153565b5b620001ca8262000142565b9050602081019050919050565b6000620001e2620001dc84620001a2565b62000191565b905082815260208101848484011115620001fb57600080fd5b620002088482856200020d565b509392505050565b600082601f8301126200022257600080fd5b81516200023a848260208601620001cb565b91505092915050565b6000602082840312156200025557600080fd5b600082015167ffffffffffffffff8111156200027057600080fd5b6200027e848285016200020e565b91505092915050565b6000819050919050565b60006200029c8262000287565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415620002d257620002d162000153565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200030c57607f821691505b602082108114156200032357620003226200030f565b5b50919050565b61085480620003346000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806306fdde031461006757806318160ddd146100855780632e0f2625146100a357806370a08231146100c157806395d89b41146100f1578063a9059cbb1461010f575b600080fd5b61006f61012b565b60405161007c91906102c8565b60405180910390f35b61008d6101b9565b60405161009a91906102ea565b60405180910390f35b6100ab6101bf565b6040516100b891906102ea565b60405180910390f35b6100db60048036038101906100d69190610336565b6101c5565b6040516100e891906102ea565b60405180910390f35b6100f96101dd565b60405161010691906102c8565b60405180910390f35b61012960048036038101906101249190610363565b61026b565b005b60606003805461013a906103d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610166906103d2565b80156101b35780601f10610188576101008083540402835291602001916101b3565b820191906000526020600020905b81548152906001019060200180831161019657829003601f168201915b5050505050905090565b60025481565b600a81565b60006020528060005260406000206000915090505481565b6060600480546101ec906103d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610218906103d2565b80156102655780601f1061023a57610100808354040283529160200191610265565b820191906000526020600020905b81548152906001019060200180831161024857829003601f168201915b5050505050905090565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561031457806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461030091906104a2565b925050819055505b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461036091906104f8565b92505081905550505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156103a557808201518184015260208101905061038a565b838111156103b4576000848401525b50505050565b6000601f19601f8301169050919050565b60006103d68261036b565b6103e08185610376565b93506103f0818560208601610387565b6103f9816103ba565b840191505092915050565b6000819050919050565b61041781610404565b82525050565b600060208201905081810360008301526104378184610387565b905092915050565b600060208201905061045460008301846103db565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104888261045d565b9050919050565b6104988161047d565b81146104a357600080fd5b50565b60006104ad82610404565b91506104b883610404565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156104ed576104ec6104c9565b5b828201905092915050565b600061050382610404565b915061050e83610404565b925082821015610521576105206104c9565b5b82820390509291505056fea2646970667358221220d7821cf3f952515f1ab0f2f2f5a4c2f5c2f8a68e6e25f51716fb8ba2e4d5a85964736f6c63430008120033";

async function main() {
    try {
        const provider = new ethers.JsonRpcProvider("https://mainnet.base.org");
        const wallet = new ethers.Wallet(`0x${process.env.COINBASE_GENERATED_WALLET_HEX_SEED}`, provider);

        console.log("Deploying from address:", wallet.address);

        // Check wallet balance
        const balance = await provider.getBalance(wallet.address);
        console.log("Wallet balance:", ethers.formatEther(balance), "ETH");

        const factory = new ethers.ContractFactory(ERC20_ABI, BYTECODE, wallet);
        const initialSupply = ethers.parseEther("1000000"); // 1 million tokens

        console.log("Deploying token contract...");
        const contract = await factory.deploy(initialSupply);
        await contract.waitForDeployment();

        const contractAddress = await contract.getAddress();
        const txHash = contract.deploymentTransaction()?.hash;

        console.log("Token contract deployed successfully!");
        console.log("Contract address:", contractAddress);
        console.log("Transaction hash:", txHash);
        console.log("View on Basescan:", `https://basescan.org/tx/${txHash}`);

    } catch (error) {
        console.error("Error deploying contract:", error);
        process.exit(1);
    }
}

main().catch((error) => {
    console.error("Error:", error);
    process.exit(1);
});
